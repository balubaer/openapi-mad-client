/**
 * MAD - OpenAPI 3.0
 * MAD(Mensch ärger dich nicht! aber in cool!) is a funny family game for one to four people.  Some useful links:  - [Spielregeln PDF](https://www.schmidtspiele.de/files/Produkte/4/49085%20-%20Mensch%20ärgere%20Dich%20nicht®/Mensch_aergere_dich_nicht49085D.pdf)
 *
 * The version of the OpenAPI document: 0.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InitPost model module.
 * @module model/InitPost
 * @version 0.0.4
 */
class InitPost {
    /**
     * Constructs a new <code>InitPost</code>.
     * game mode and settings
     * @alias module:model/InitPost
     */
    constructor() { 
        
        InitPost.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InitPost</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InitPost} obj Optional instance to populate.
     * @return {module:model/InitPost} The populated <code>InitPost</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InitPost();

            if (data.hasOwnProperty('mode')) {
                obj['mode'] = ApiClient.convertToType(data['mode'], 'String');
            }
            if (data.hasOwnProperty('players')) {
                obj['players'] = ApiClient.convertToType(data['players'], 'Number');
            }
            if (data.hasOwnProperty('bots')) {
                obj['bots'] = ApiClient.convertToType(data['bots'], 'Number');
            }
            if (data.hasOwnProperty('gameMode')) {
                obj['gameMode'] = ApiClient.convertToType(data['gameMode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InitPost</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InitPost</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['mode'] && !(typeof data['mode'] === 'string' || data['mode'] instanceof String)) {
            throw new Error("Expected the field `mode` to be a primitive type in the JSON string but got " + data['mode']);
        }
        // ensure the json data is a string
        if (data['gameMode'] && !(typeof data['gameMode'] === 'string' || data['gameMode'] instanceof String)) {
            throw new Error("Expected the field `gameMode` to be a primitive type in the JSON string but got " + data['gameMode']);
        }

        return true;
    }


}



/**
 * singleplayer or multiplayer
 * @member {module:model/InitPost.ModeEnum} mode
 */
InitPost.prototype['mode'] = undefined;

/**
 * how many players, at least one (yourself)
 * @member {Number} players
 */
InitPost.prototype['players'] = undefined;

/**
 * how many bots, bots added to the players !> 4
 * @member {Number} bots
 */
InitPost.prototype['bots'] = undefined;

/**
 * select game mode to play
 * @member {module:model/InitPost.GameModeEnum} gameMode
 */
InitPost.prototype['gameMode'] = undefined;





/**
 * Allowed values for the <code>mode</code> property.
 * @enum {String}
 * @readonly
 */
InitPost['ModeEnum'] = {

    /**
     * value: "singleplayer"
     * @const
     */
    "singleplayer": "singleplayer",

    /**
     * value: "multiplayer"
     * @const
     */
    "multiplayer": "multiplayer"
};


/**
 * Allowed values for the <code>gameMode</code> property.
 * @enum {String}
 * @readonly
 */
InitPost['GameModeEnum'] = {

    /**
     * value: "standard"
     * @const
     */
    "standard": "standard"
};



export default InitPost;

