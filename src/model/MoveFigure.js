/**
 * MAD - OpenAPI 3.0
 * MAD(Mensch ärger dich nicht! aber in cool!) is a funny family game for one to four people.  Some useful links:  - [Spielregeln PDF](https://www.schmidtspiele.de/files/Produkte/4/49085%20-%20Mensch%20ärgere%20Dich%20nicht®/Mensch_aergere_dich_nicht49085D.pdf)
 *
 * The version of the OpenAPI document: 0.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Field from './Field';
import GameEnds from './GameEnds';

/**
 * The MoveFigure model module.
 * @module model/MoveFigure
 * @version 0.0.4
 */
class MoveFigure {
    /**
     * Constructs a new <code>MoveFigure</code>.
     * the game after trying to move the selected figure
     * @alias module:model/MoveFigure
     */
    constructor() { 
        
        MoveFigure.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MoveFigure</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MoveFigure} obj Optional instance to populate.
     * @return {module:model/MoveFigure} The populated <code>MoveFigure</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MoveFigure();

            if (data.hasOwnProperty('canMove')) {
                obj['canMove'] = ApiClient.convertToType(data['canMove'], 'Boolean');
            }
            if (data.hasOwnProperty('nextPlayer')) {
                obj['nextPlayer'] = ApiClient.convertToType(data['nextPlayer'], 'Boolean');
            }
            if (data.hasOwnProperty('rollAgain')) {
                obj['rollAgain'] = ApiClient.convertToType(data['rollAgain'], 'Boolean');
            }
            if (data.hasOwnProperty('playingField')) {
                obj['playingField'] = ApiClient.convertToType(data['playingField'], [Field]);
            }
            if (data.hasOwnProperty('gameEnds')) {
                obj['gameEnds'] = GameEnds.constructFromObject(data['gameEnds']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MoveFigure</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MoveFigure</code>.
     */
    static validateJSON(data) {
        if (data['playingField']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['playingField'])) {
                throw new Error("Expected the field `playingField` to be an array in the JSON data but got " + data['playingField']);
            }
            // validate the optional field `playingField` (array)
            for (const item of data['playingField']) {
                Field.validateJsonObject(item);
            };
        }
        // validate the optional field `gameEnds`
        if (data['gameEnds']) { // data not null
          GameEnds.validateJSON(data['gameEnds']);
        }

        return true;
    }


}



/**
 * @member {Boolean} canMove
 */
MoveFigure.prototype['canMove'] = undefined;

/**
 * after this action its the next player turn
 * @member {Boolean} nextPlayer
 */
MoveFigure.prototype['nextPlayer'] = undefined;

/**
 * if the player has to roll roll again
 * @member {Boolean} rollAgain
 */
MoveFigure.prototype['rollAgain'] = undefined;

/**
 * the playing field status
 * @member {Array.<module:model/Field>} playingField
 */
MoveFigure.prototype['playingField'] = undefined;

/**
 * @member {module:model/GameEnds} gameEnds
 */
MoveFigure.prototype['gameEnds'] = undefined;






export default MoveFigure;

