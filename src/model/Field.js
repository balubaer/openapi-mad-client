/**
 * MAD - OpenAPI 3.0
 * MAD(Mensch ärger dich nicht! aber in cool!) is a funny family game for one to four people.  Some useful links:  - [Spielregeln PDF](https://www.schmidtspiele.de/files/Produkte/4/49085%20-%20Mensch%20ärgere%20Dich%20nicht®/Mensch_aergere_dich_nicht49085D.pdf)
 *
 * The version of the OpenAPI document: 0.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Figure from './Figure';

/**
 * The Field model module.
 * @module model/Field
 * @version 0.0.4
 */
class Field {
    /**
     * Constructs a new <code>Field</code>.
     * a field
     * @alias module:model/Field
     */
    constructor() { 
        
        Field.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Field</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Field} obj Optional instance to populate.
     * @return {module:model/Field} The populated <code>Field</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Field();

            if (data.hasOwnProperty('color')) {
                obj['color'] = ApiClient.convertToType(data['color'], 'Number');
            }
            if (data.hasOwnProperty('playerId')) {
                obj['playerId'] = ApiClient.convertToType(data['playerId'], 'Number');
            }
            if (data.hasOwnProperty('figure')) {
                obj['figure'] = Figure.constructFromObject(data['figure']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Field</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Field</code>.
     */
    static validateJSON(data) {
        // validate the optional field `figure`
        if (data['figure']) { // data not null
          Figure.validateJSON(data['figure']);
        }

        return true;
    }


}



/**
 * a color
 * @member {Number} color
 */
Field.prototype['color'] = undefined;

/**
 * unic player ID
 * @member {Number} playerId
 */
Field.prototype['playerId'] = undefined;

/**
 * @member {module:model/Figure} figure
 */
Field.prototype['figure'] = undefined;






export default Field;

