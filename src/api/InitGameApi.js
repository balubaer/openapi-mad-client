/**
 * MAD - OpenAPI 3.0
 * MAD(Mensch ärger dich nicht! aber in cool!) is a funny family game for one to four people.  Some useful links:  - [Spielregeln PDF](https://www.schmidtspiele.de/files/Produkte/4/49085%20-%20Mensch%20ärgere%20Dich%20nicht®/Mensch_aergere_dich_nicht49085D.pdf)
 *
 * The version of the OpenAPI document: 0.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import InitPost from '../model/InitPost';
import JoinUpdateResponse from '../model/JoinUpdateResponse';

/**
* InitGame service.
* @module api/InitGameApi
* @version 0.0.4
*/
export default class InitGameApi {

    /**
    * Constructs a new InitGameApi. 
    * @alias module:api/InitGameApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the choseAGame operation.
     * @callback module:api/InitGameApi~choseAGameCallback
     * @param {String} error Error message, if any.
     * @param {Array.<Number>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * chose a game
     * ask for the aktive games
     * @param {module:api/InitGameApi~choseAGameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Number>}
     */
    choseAGame(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ['Number'];
      return this.apiClient.callApi(
        '/choseGame', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the instantiateGameObjectWithGivenGameSetting operation.
     * @callback module:api/InitGameApi~instantiateGameObjectWithGivenGameSettingCallback
     * @param {String} error Error message, if any.
     * @param {Number} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * select game object type and set game options
     * 
     * @param {Object} opts Optional parameters
     * @param {module:model/InitPost} opts.initPost 
     * @param {module:api/InitGameApi~instantiateGameObjectWithGivenGameSettingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Number}
     */
    instantiateGameObjectWithGivenGameSetting(opts, callback) {
      opts = opts || {};
      let postBody = opts['initPost'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = 'Number';
      return this.apiClient.callApi(
        '/init', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the joinAGame operation.
     * @callback module:api/InitGameApi~joinAGameCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * sends join Request
     * sends game id to join, name and color
     * @param {Number} gameId which game you wanna join
     * @param {String} playerName name of the player
     * @param {String} playerColor color of the player
     * @param {module:api/InitGameApi~joinAGameCallback} callback The callback function, accepting three arguments: error, data, response
     */
    joinAGame(gameId, playerName, playerColor, callback) {
      let postBody = null;
      // verify the required parameter 'gameId' is set
      if (gameId === undefined || gameId === null) {
        throw new Error("Missing the required parameter 'gameId' when calling joinAGame");
      }
      // verify the required parameter 'playerName' is set
      if (playerName === undefined || playerName === null) {
        throw new Error("Missing the required parameter 'playerName' when calling joinAGame");
      }
      // verify the required parameter 'playerColor' is set
      if (playerColor === undefined || playerColor === null) {
        throw new Error("Missing the required parameter 'playerColor' when calling joinAGame");
      }

      let pathParams = {
      };
      let queryParams = {
        'gameId': gameId,
        'playerName': playerName,
        'playerColor': playerColor
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/joinGame', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the playersStatus operation.
     * @callback module:api/InitGameApi~playersStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/JoinUpdateResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get the player list
     * send the players which has currently joined the game
     * @param {Number} gameId game you`ve joined
     * @param {module:api/InitGameApi~playersStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/JoinUpdateResponse}
     */
    playersStatus(gameId, callback) {
      let postBody = null;
      // verify the required parameter 'gameId' is set
      if (gameId === undefined || gameId === null) {
        throw new Error("Missing the required parameter 'gameId' when calling playersStatus");
      }

      let pathParams = {
        'gameId': gameId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = JoinUpdateResponse;
      return this.apiClient.callApi(
        '/joinUpdate/{gameId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the startTheGame operation.
     * @callback module:api/InitGameApi~startTheGameCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * start the game
     * start the multiplayer game
     * @param {Number} gameId game you`ve joined
     * @param {module:api/InitGameApi~startTheGameCallback} callback The callback function, accepting three arguments: error, data, response
     */
    startTheGame(gameId, callback) {
      let postBody = null;
      // verify the required parameter 'gameId' is set
      if (gameId === undefined || gameId === null) {
        throw new Error("Missing the required parameter 'gameId' when calling startTheGame");
      }

      let pathParams = {
        'gameId': gameId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/startGame/{gameId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
